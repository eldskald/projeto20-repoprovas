// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
    id          Int     @id @default(autoincrement())
    email       String  @unique @db.VarChar(50)
    password    String
    @@map("users")
}

model Teacher {
    id                      Int     @id @default(autoincrement())
    name                    String  @unique @db.VarChar(50)
    TeacherDiscipline       TeacherDiscipline[]
    @@map("teachers")
}

model Term {
    id              Int             @id @default(autoincrement())
    number          Int             @unique
    Discipline      Discipline[]
    @@map("terms")
}

model Discipline {
    id                      Int     @id @default(autoincrement())
    name                    String  @unique @db.VarChar(50)
    termId                  Int
    Term                    Term   @relation(fields: [termId], references: [id], onDelete: NoAction, onUpdate: NoAction)
    TeacherDiscipline       TeacherDiscipline[]
    @@map("disciplines")
}

model TeacherDiscipline {
    id              Int         @id @default(autoincrement())
    teacherId       Int
    disciplineId    Int
    Teacher         Teacher    @relation(fields: [teacherId], references: [id], onDelete: NoAction, onUpdate: NoAction)
    Discipline      Discipline @relation(fields: [disciplineId], references: [id], onDelete: NoAction, onUpdate: NoAction)
    Test            Test[]
    @@map("teachersDisciplines")
}

model Category {
    id              Int         @id @default(autoincrement())
    name            String      @unique
    Test            Test[]
    @@map("categories")
}

model Test {
    id                      Int                 @id @default(autoincrement())
    name                    String              @db.VarChar(50)
    pdfUrl                  String
    categoryId              Int
    teacherDisciplineId     Int
    Category                Category          @relation(fields: [categoryId], references: [id], onDelete: NoAction, onUpdate: NoAction)
    TeacherDiscipline       TeacherDiscipline @relation(fields: [teacherDisciplineId], references: [id], onDelete: NoAction, onUpdate: NoAction)
    @@map("tests")
}